
const { spawn } = require('child_process');
const path = require('path');

// ุฏุงูุฉ ูุชุดุบูู ุฃูุงูุฑ ุงููุธุงู
function runCommand(command, args, options = {}) {
  return new Promise((resolve, reject) => {
    const child = spawn(command, args, {
      stdio: 'inherit',
      shell: true,
      ...options
    });

    child.on('close', (code) => {
      if (code === 0) {
        resolve();
      } else {
        reject(new Error(`Command failed with code ${code}`));
      }
    });
  });
}

// ุจูุงุก ุงูุชุทุจูู ููุฅูุชุงุฌ
async function buildForProduction() {
  console.log('๐จ ุจูุงุก ุชุทุจูู React...');
  await runCommand('npm', ['run', 'build']);
  
  console.log('๐ฆ ุจูุงุก ุชุทุจูู Electron...');
  await runCommand('npx', ['electron-builder']);
  
  console.log('โ ุชู ุฅูุดุงุก ุงูุชุทุจูู ุจูุฌุงุญ ูู ูุฌูุฏ electron-dist/');
}

// ุชุดุบูู ุงูุชุทุจูู ูู ูุถุน ุงูุชุทููุฑ
async function runDev() {
  console.log('๐ ุชุดุบูู ุงูุชุทุจูู ูู ูุถุน ุงูุชุทููุฑ...');
  
  // ุชุดุบูู ุฎุงุฏู ุงูุชุทููุฑ
  const devServer = spawn('npm', ['run', 'dev'], {
    stdio: 'inherit',
    shell: true
  });

  // ุงูุชุธุงุฑ ุจุฏุก ุงูุฎุงุฏู
  setTimeout(() => {
    // ุชุดุบูู Electron
    spawn('npx', ['electron', '.'], {
      stdio: 'inherit',
      shell: true,
      env: { ...process.env, NODE_ENV: 'development' }
    });
  }, 3000);
}

// ุชุดุบูู ุญุณุจ ุงููุนุงูู ุงููุฑุณู
const command = process.argv[2];

if (command === 'build') {
  buildForProduction().catch(console.error);
} else if (command === 'dev') {
  runDev().catch(console.error);
} else {
  console.log('ุงูุฃูุงูุฑ ุงููุชุงุญุฉ:');
  console.log('  npm run electron:dev  - ุชุดุบูู ุงูุชุทุจูู ูู ูุถุน ุงูุชุทููุฑ');
  console.log('  npm run electron:build - ุจูุงุก ุงูุชุทุจูู ููุฅูุชุงุฌ');
}
